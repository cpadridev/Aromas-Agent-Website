---
import Layout from '@layouts/Layout.astro';
---

<Layout>
  <div id='spinner-background' class='spinner-background hidden'></div>
  <div id='spinner' class='spinner hidden'></div>
  <form action='' class='form' id='loginForm'>
    <input type='email' name='email' id='email' placeholder='Email' />
    <input
      type='password'
      name='password'
      id='password'
      placeholder='Password'
    />
    <p id='errorMessage' class='text-red-600'></p>
    <button type='button' id='signInButton'>Sign In</button>
  </form>
</Layout>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
  }

  body,
  html {
    height: 100%;
    overflow: hidden;
  }

  .form {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 40vh;
    background: white;
    padding: 20px;
    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    margin: auto;
    border-radius: 10px;
    position: relative;
    top: 20vh;
  }

  .form input {
    margin: 10px 0;
    padding: 10px;
    width: 100%;
    border-radius: 5px;
    border: 1px solid #ccc;
    font-size: 1em;
  }

  .form button {
    padding: 10px;
    border-radius: 5px;
    border: 1px solid black;
    background-color: white;
    color: black;
    cursor: pointer;
    width: 100%;
    font-size: 1em;
    transition:
      background-color 0.3s,
      color 0.3s;
  }

  .form button:hover {
    background-color: black;
    color: white;
  }

  .spinner-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 999;
  }

  .spinner {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: 8px solid rgba(0, 0, 0, 0.1);
    border-top: 8px solid black;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    animation: spin 1s linear infinite;
    z-index: 1000;
  }

  .hidden {
    display: none;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>

<script>
  ;(document.querySelector('#email') as HTMLInputElement).value =
    sessionStorage.getItem('email')
  sessionStorage.clear()

  document.addEventListener('DOMContentLoaded', (event) => {
    const form = document.getElementById('loginForm')
    const button = document.getElementById('signInButton')

    form.addEventListener('keypress', function (e) {
      if (e.key === 'Enter') {
        e.preventDefault()
        button.click()
      }
    })
  })

  document.querySelector('button').addEventListener('click', async () => {
    const spinnerBackground = document.getElementById('spinner-background');
    const spinner = document.getElementById('spinner');
    spinnerBackground.classList.remove('hidden');
    spinner.classList.remove('hidden');

    fetch(import.meta.env.PUBLIC_API + 'sign-in', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        username: (document.getElementById('email') as HTMLInputElement).value,
        password: (document.getElementById('password') as HTMLInputElement)
          .value,
      }),
    })
      .then((response) => response.json())
      .then((data) => {
        localStorage.setItem(
          'user',
          JSON.stringify({
            id: data.body[0]['id'],
            partnerId: data.body[0]['partner_id'][0],
            partnerName: data.body[0]['partner_id'][1],
          })
        );
        sessionStorage.setItem(
          'email',
          (document.querySelector('#email') as HTMLInputElement).value
        );
        window.location.href = './home';
      })
      .catch((error) => {
        console.log(error);
        document.querySelector('#errorMessage').innerHTML =
          'Invalid credentials';
      })
      .finally(() => {
        spinnerBackground.classList.add('hidden');
        spinner.classList.add('hidden');
      });
  });
</script>
