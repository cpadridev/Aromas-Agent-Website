---
import Layout from '@layouts/Layout.astro'
import MaterialSymbolsArrowBackRounded from '~icons/material-symbols/arrow-back-rounded'
---

<Layout>
  <div class='w-[90%] my-5 mx-auto flex justify-between items-center'>
    <button id='backButton' class='m-5'>
      <MaterialSymbolsArrowBackRounded class:list={'text-[28px]'} />
    </button>
  </div>
  <table id='users' class='my-5 mx-auto border-collapse user-table sortable'>
    <thead class='cursor-pointer'>
      <tr>
        <th>Email</th>
        <th>Status</th>
        <th>Reset Password</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>
  <link
    href='https://cdn.jsdelivr.net/gh/tofsjonas/sortable@latest/sortable.min.css'
    rel='stylesheet'
  />
  <script
    src='https://cdn.jsdelivr.net/gh/tofsjonas/sortable@latest/sortable.min.js'
  ></script>
</Layout>

<style>
  .user-table th {
    text-align: center;
    background-color: #fff;
    color: #000;
    font-weight: bold;
    cursor: default;
    padding: 20px;
    border: 1px solid #ddd;
  }
</style>

<script>
  document.querySelector('#backButton').addEventListener('click', () => {
    window.location.href = '/customers'
  })

  const customerID = JSON.parse(localStorage.getItem('customer')).customerID

  const fields = ['login', 'state']

  let params = [['partner_id.parent_id', '=', customerID]]

  fetch(import.meta.env.PUBLIC_API + 'users', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      params: params,
      fields: fields
    })
  })
    .then((response) => response.json())
    .then((data) => {
      const records = data.body.records

      const tbody = document.querySelector(
        '#users tbody'
      ) as HTMLTableElement

      tbody.innerHTML = ''

      records.forEach((record) => {
        const row = tbody.insertRow()

        for (let i = 0; i <= fields.length; i++) {
          const cell = row.insertCell()
          cell.style.border = '1px solid #ddd'
          cell.style.padding = '8px'
          cell.style.textAlign = 'center'

          if (i == fields.length) {
            cell.style.textDecoration = 'underline'
            cell.style.cursor = 'pointer'
            cell.innerHTML = 'Send Email'
            cell.addEventListener('click', () => {
              window.open(
                'https://indawsodoo-aromasdelcampo.odoo.com/aromas_reset_pasword/' +
                  record.id,
                '_blank'
              )
            })
            continue
          }

          const text = record[fields[i]].toString()
          cell.innerHTML = text

          
        }
      })
    })
    .catch((error) => {
      console.log(error)
    })
</script>
